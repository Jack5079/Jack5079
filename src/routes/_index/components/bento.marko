import type { AttrStyle } from "marko/tags-html"
export type Input = {
	// This is technically incorrect, but it's the only way to get anything remotely typesafe
	[key: string]: Omit<Marko.AttrTag<Marko.HTML.FieldSet>, "id"> | string[][] | AttrStyle
	style: AttrStyle
	value: string[][]
}

<div
	class="bento"
	style=[
		{
			"grid-template-areas": input.value
				.map((row) => row.join(" "))
				.map((row) => `'${row}'`)
				.join(""),
		},
		input.style,
	]
	role="none"
>
	<for|[gridArea, block]|
		of=Object.entries(input).filter(([area]) => area !== "value" && area !== "style")
	>
		<fieldset role="none" id=gridArea ...block style=[{ "grid-area": gridArea }, block.style]>
			<${block} />
		</fieldset>
	</for>
</div>

<style>
	@media (min-width: calc(800px + 40px)) {
		.bento {
			display: grid;
			grid-gap: 1em;
		}
	}

	fieldset {
		border-color: #ff4539;
		border-radius: 1ch;
		border-style: solid;
		align-content: center;
		transition:
			opacity 0.3s,
			border-color 0.3s;
	}
	fieldset:target {
		border-color: Highlight;
	}
	div:has(fieldset:target) fieldset:not(:target) {
		opacity: 0.5;
	}
</style>
