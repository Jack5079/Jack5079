---
import type { CollectionEntry } from "astro:content"
import BaseHead from "../components/BaseHead.astro"
import Header from "../components/Header.astro"
import Footer from "../components/Footer.astro"
import FormattedDate from "../components/FormattedDate.astro"
import { Picture } from "astro:assets"
import { getImage } from "astro:assets"

type Props = CollectionEntry<"blog">["data"]

const { title, description, pubDate, updatedDate, image } = Astro.props
---

<html lang="en">
	<head>
		<BaseHead
			title={title}
			description={description}
			image={image &&
				(
					await getImage({
						src: image[0],
						format: "png",
						width: 1200,
					})
				).src}
			image_alt={image?.[1]}
		/>
		<meta name="robots" content="noindex" />
		<style>
			/* Top of the page, then fades out */
			.u-featured {
				-webkit-mask-image: linear-gradient(to top, transparent 0%, black 40%);
				mask-image: linear-gradient(to top, transparent 0%, black 40%);
				border-radius: 1em 1em 0 0;
				width: 100%;
				height: auto;
			}
		</style>
	</head>

	<body class="h-entry">
		<Header />
		<main>
			<article>
				{
					image && (
						<Picture
							class="u-featured"
							src={image[0]}
							alt={image[1]}
							width={657}
							densities={[0.5, 1.5, 2]}
						/>
					)
				}
				<hgroup style="text-align:center">
					<h1 class="p-name" style="font-size:xx-large;margin-bottom:0;text-wrap:balance;width:100%" set:html={title} />
					{
						description && (
							<p class="p-summary" style="font-style:italic">
								{description}
							</p>
						)
					}
					<a class="u-url" href={Astro.url.href} style="display:contents;color:GrayText">
						<FormattedDate date={pubDate} />

						{
							updatedDate && (
								<div style="font-style:italic">
									Last updated on <FormattedDate date={updatedDate} />
								</div>
							)
						}
					</a>
				</hgroup>
				<div class="e-content">
					<slot />
				</div>
			</article>
		</main>
		<Footer />
	</body>
</html>
